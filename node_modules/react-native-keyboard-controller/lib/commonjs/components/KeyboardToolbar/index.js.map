{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_bindings","_useColorScheme","_interopRequireDefault","_KeyboardStickyView","_Arrow","_Button","_colors","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_extends","assign","bind","arguments","length","apply","TEST_ID_KEYBOARD_TOOLBAR","TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS","TEST_ID_KEYBOARD_TOOLBAR_NEXT","TEST_ID_KEYBOARD_TOOLBAR_CONTENT","TEST_ID_KEYBOARD_TOOLBAR_DONE","KEYBOARD_TOOLBAR_HEIGHT","DEFAULT_OPACITY","offset","closed","dismissKeyboard","KeyboardController","dismiss","goToNextField","setFocusTo","goToPrevField","KeyboardToolbar","content","theme","colors","doneText","button","icon","showArrows","onNextCallback","onPrevCallback","onDoneCallback","blur","opacity","rest","colorScheme","useColorScheme","inputs","setInputs","useState","current","count","isPrevDisabled","isNextDisabled","useEffect","subscription","FocusedInputEvents","addListener","remove","doneStyle","useMemo","styles","doneButton","color","primary","toolbarStyle","toolbar","backgroundColor","background","ButtonContainer","Button","IconContainer","Arrow","onPressNext","useCallback","event","isDefaultPrevented","onPressPrev","onPressDone","createElement","View","style","testID","Fragment","accessibilityHint","accessibilityLabel","disabled","onPress","type","flex","rippleRadius","doneButtonContainer","Text","maxFontSizeMultiplier","StyleSheet","create","position","bottom","alignItems","width","flexDirection","height","paddingHorizontal","fontWeight","fontSize","marginRight","_default","exports"],"sources":["index.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport { FocusedInputEvents, KeyboardController } from \"../../bindings\";\nimport useColorScheme from \"../hooks/useColorScheme\";\nimport KeyboardStickyView from \"../KeyboardStickyView\";\n\nimport Arrow from \"./Arrow\";\nimport Button from \"./Button\";\nimport { colors } from \"./colors\";\n\nimport type { HEX, KeyboardToolbarTheme } from \"./types\";\nimport type { ReactNode } from \"react\";\nimport type { GestureResponderEvent, ViewProps } from \"react-native\";\n\nexport type KeyboardToolbarProps = Omit<\n  ViewProps,\n  \"style\" | \"testID\" | \"children\"\n> & {\n  /** An element that is shown in the middle of the toolbar. */\n  content?: JSX.Element | null;\n  /** A set of dark/light colors consumed by toolbar component. */\n  theme?: KeyboardToolbarTheme;\n  /** Custom text for done button. */\n  doneText?: ReactNode;\n  /** Custom touchable component for toolbar (used for prev/next/done buttons). */\n  button?: typeof Button;\n  /** Custom icon component used to display next/prev buttons. */\n  icon?: typeof Arrow;\n  /**\n   * Whether to show next and previous buttons. Can be useful to set it to `false` if you have only one input\n   * and want to show only `Done` button. Default to `true`.\n   */\n  showArrows?: boolean;\n  /**\n   * A callback that is called when the user presses the next button along with the default action.\n   */\n  onNextCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the previous button along with the default action.\n   */\n  onPrevCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A callback that is called when the user presses the done button along with the default action.\n   */\n  onDoneCallback?: (event: GestureResponderEvent) => void;\n  /**\n   * A component that applies blur effect to the toolbar.\n   */\n  blur?: JSX.Element | null;\n  /**\n   * A value for container opacity in hexadecimal format (e.g. `ff`). Default value is `ff`.\n   */\n  opacity?: HEX;\n};\n\nconst TEST_ID_KEYBOARD_TOOLBAR = \"keyboard.toolbar\";\nconst TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS = `${TEST_ID_KEYBOARD_TOOLBAR}.previous`;\nconst TEST_ID_KEYBOARD_TOOLBAR_NEXT = `${TEST_ID_KEYBOARD_TOOLBAR}.next`;\nconst TEST_ID_KEYBOARD_TOOLBAR_CONTENT = `${TEST_ID_KEYBOARD_TOOLBAR}.content`;\nconst TEST_ID_KEYBOARD_TOOLBAR_DONE = `${TEST_ID_KEYBOARD_TOOLBAR}.done`;\n\nconst KEYBOARD_TOOLBAR_HEIGHT = 42;\nconst DEFAULT_OPACITY: HEX = \"FF\";\nconst offset = { closed: KEYBOARD_TOOLBAR_HEIGHT };\n\nconst dismissKeyboard = () => KeyboardController.dismiss();\nconst goToNextField = () => KeyboardController.setFocusTo(\"next\");\nconst goToPrevField = () => KeyboardController.setFocusTo(\"prev\");\n\n/**\n * `KeyboardToolbar` is a component that is shown above the keyboard with `Prev`/`Next` and\n * `Done` buttons.\n */\nconst KeyboardToolbar: React.FC<KeyboardToolbarProps> = ({\n  content,\n  theme = colors,\n  doneText,\n  button,\n  icon,\n  showArrows = true,\n  onNextCallback,\n  onPrevCallback,\n  onDoneCallback,\n  blur = null,\n  opacity = DEFAULT_OPACITY,\n  ...rest\n}) => {\n  const colorScheme = useColorScheme();\n  const [inputs, setInputs] = useState({\n    current: 0,\n    count: 0,\n  });\n  const isPrevDisabled = inputs.current === 0;\n  const isNextDisabled = inputs.current === inputs.count - 1;\n\n  useEffect(() => {\n    const subscription = FocusedInputEvents.addListener(\"focusDidSet\", (e) => {\n      setInputs(e);\n    });\n\n    return subscription.remove;\n  }, []);\n  const doneStyle = useMemo(\n    () => [styles.doneButton, { color: theme[colorScheme].primary }],\n    [colorScheme, theme],\n  );\n  const toolbarStyle = useMemo(\n    () => [\n      styles.toolbar,\n      {\n        backgroundColor: `${theme[colorScheme].background}${opacity}`,\n      },\n    ],\n    [colorScheme, opacity, theme],\n  );\n  const ButtonContainer = button || Button;\n  const IconContainer = icon || Arrow;\n\n  const onPressNext = useCallback(\n    (event: GestureResponderEvent) => {\n      onNextCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        goToNextField();\n      }\n    },\n    [onNextCallback],\n  );\n  const onPressPrev = useCallback(\n    (event: GestureResponderEvent) => {\n      onPrevCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        goToPrevField();\n      }\n    },\n    [onPrevCallback],\n  );\n  const onPressDone = useCallback(\n    (event: GestureResponderEvent) => {\n      onDoneCallback?.(event);\n\n      if (!event.isDefaultPrevented()) {\n        dismissKeyboard();\n      }\n    },\n    [onDoneCallback],\n  );\n\n  return (\n    <KeyboardStickyView offset={offset}>\n      <View {...rest} style={toolbarStyle} testID={TEST_ID_KEYBOARD_TOOLBAR}>\n        {blur}\n        {showArrows && (\n          <>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the previous field\"\n              accessibilityLabel=\"Previous\"\n              disabled={isPrevDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_PREVIOUS}\n              theme={theme}\n              onPress={onPressPrev}\n            >\n              <IconContainer\n                disabled={isPrevDisabled}\n                theme={theme}\n                type=\"prev\"\n              />\n            </ButtonContainer>\n            <ButtonContainer\n              accessibilityHint=\"Moves focus to the next field\"\n              accessibilityLabel=\"Next\"\n              disabled={isNextDisabled}\n              testID={TEST_ID_KEYBOARD_TOOLBAR_NEXT}\n              theme={theme}\n              onPress={onPressNext}\n            >\n              <IconContainer\n                disabled={isNextDisabled}\n                theme={theme}\n                type=\"next\"\n              />\n            </ButtonContainer>\n          </>\n        )}\n\n        <View style={styles.flex} testID={TEST_ID_KEYBOARD_TOOLBAR_CONTENT}>\n          {content}\n        </View>\n        <ButtonContainer\n          accessibilityHint=\"Closes the keyboard\"\n          accessibilityLabel=\"Done\"\n          rippleRadius={28}\n          style={styles.doneButtonContainer}\n          testID={TEST_ID_KEYBOARD_TOOLBAR_DONE}\n          theme={theme}\n          onPress={onPressDone}\n        >\n          <Text maxFontSizeMultiplier={1.3} style={doneStyle}>\n            {doneText || \"Done\"}\n          </Text>\n        </ButtonContainer>\n      </View>\n    </KeyboardStickyView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flex: {\n    flex: 1,\n  },\n  toolbar: {\n    position: \"absolute\",\n    bottom: 0,\n    alignItems: \"center\",\n    width: \"100%\",\n    flexDirection: \"row\",\n    height: KEYBOARD_TOOLBAR_HEIGHT,\n    paddingHorizontal: 8,\n  },\n  doneButton: {\n    fontWeight: \"600\",\n    fontSize: 15,\n  },\n  doneButtonContainer: {\n    marginRight: 8,\n  },\n});\n\nexport { colors as DefaultKeyboardToolbarTheme };\nexport default KeyboardToolbar;\n"],"mappings":"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","ignoreList":[]}