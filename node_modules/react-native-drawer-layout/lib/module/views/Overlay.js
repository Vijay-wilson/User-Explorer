function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import * as React from 'react';
import { Pressable, StyleSheet, View } from 'react-native';
export function Overlay(_ref) {
  let {
    open,
    onPress,
    style,
    accessibilityLabel = 'Close drawer',
    ...rest
  } = _ref;
  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {
    style: [styles.overlay, {
      opacity: open ? 1 : 0,
      pointerEvents: open ? 'auto' : 'none'
    }, style],
    accessibilityElementsHidden: !open,
    importantForAccessibility: open ? 'auto' : 'no-hide-descendants'
  }), /*#__PURE__*/React.createElement(Pressable, {
    onPress: onPress,
    style: [styles.pressable, {
      pointerEvents: open ? 'auto' : 'none'
    }],
    accessibilityRole: "button",
    accessibilityLabel: accessibilityLabel
  }));
}
const styles = StyleSheet.create({
  overlay: {
    ...StyleSheet.absoluteFillObject,
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
    // Disable touch highlight on mobile Safari.
    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.
    // @ts-expect-error: WebkitTapHighlightColor is web only
    WebkitTapHighlightColor: 'transparent',
    transition: 'opacity 0.3s'
  },
  pressable: {
    flex: 1
  }
});
//# sourceMappingURL=Overlay.js.map